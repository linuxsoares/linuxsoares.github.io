<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>I&#39;m Gilmar Soares</title>
    <link>//localhost:1313/</link>
    <description>Recent content on I&#39;m Gilmar Soares</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 17 Oct 2024 16:59:52 -0300</lastBuildDate><atom:link href="//localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Remember Life Is Not a 100 Meter Race</title>
      <link>//localhost:1313/posts/remember-life-is-not-a-100-meter-race/</link>
      <pubDate>Thu, 17 Oct 2024 16:59:52 -0300</pubDate>
      
      <guid>//localhost:1313/posts/remember-life-is-not-a-100-meter-race/</guid>
      
        <description>&lt;p&gt;In my life, I’ve often liked something and used it every day until I got sick of it.
But now, I’ve started therapy, and one of the first things I’ve learned is how to use a calendar to organize my routine.&lt;/p&gt;
&lt;p&gt;By organizing my routine, I realized that I need to plan everything in advance—whether it’s for the week, month, or year.
For example, in my current routine:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;I exercise for one hour every weekday.
I study English two days a week, for one hour each day.
I spend 30 minutes every day reading books outside of my profession, among other activities.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The best part about organizing your week with clear goals is understanding that progress takes time.
I won’t learn English or Golang (a programming language) in a day or a week. However, by organizing my week, I can work toward these goals gradually and stay on track.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Duck Typing in Go</title>
      <link>//localhost:1313/posts/duck-typing-in-go/</link>
      <pubDate>Thu, 10 Oct 2024 13:46:16 -0300</pubDate>
      
      <guid>//localhost:1313/posts/duck-typing-in-go/</guid>
      
        <description>&lt;p&gt;Hello everyone!&lt;/p&gt;
&lt;p&gt;As I mentioned in a previous post, I’m currently learning Go to use in some of my work projects.
In this short post, I’ll explain how to use duck typing in Go,
which was quite challenging for me when I first started learning the language.&lt;/p&gt;
&lt;p&gt;To begin, let’s look at a simple example in Python:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Duck&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;quack&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Quack, quack!&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Person&lt;/span&gt;(Duck):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;quack&lt;/span&gt;(obj):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    obj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;quack()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    donald &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Duck()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    john &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Person()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    quack(donald) &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt; Quack, quack&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    quack(john) &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt; Quack, quack&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this somewhat quirky example, the Person class can &amp;ldquo;quack&amp;rdquo; like a Duck because it inherits from the Duck class.
In Python, we don’t need to explicitly declare the type of the object in the function; we simply call the method we want to use.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>How Can Ai Change the Way We Work</title>
      <link>//localhost:1313/posts/how-can-ai-change-the-way-we-work/</link>
      <pubDate>Thu, 03 Oct 2024 18:50:05 -0300</pubDate>
      
      <guid>//localhost:1313/posts/how-can-ai-change-the-way-we-work/</guid>
      
        <description>&lt;p&gt;The first answer is, I DON’T KNOW! Bye-bye! (Just kidding! Keep reading, please! It was only a joke!)&lt;/p&gt;
&lt;p&gt;Today, I saw the new Canvas feature from OpenAI, and I’m feeling two things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I’m very excited about the evolution of AI and the new possibilities it can bring.&lt;/li&gt;
&lt;li&gt;I’m also a bit scared by the rapid advancement of AI and the potential changes it could bring.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s start with the first point. I use AI daily to help me write code at work. But of course, I don’t just copy and paste the AI-generated code into my editor (I use Zed). Instead, I use AI to resolve my doubts and assist me when I need to write in programming languages I’m less experienced with. This is amazing—it’s like having a knowledgeable assistant right by my side!&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Keep Studyng Never Stop</title>
      <link>//localhost:1313/posts/keep-studyng-never-stop/</link>
      <pubDate>Fri, 27 Sep 2024 17:43:00 -0300</pubDate>
      
      <guid>//localhost:1313/posts/keep-studyng-never-stop/</guid>
      
        <description>&lt;h2 id=&#34;why-i-suggest-you-never-stop-studying&#34;&gt;Why I suggest you never stop studying!&lt;/h2&gt;
&lt;p&gt;At the start of my career, searching for a profession, I was always very curious about computers, but with a limited income, we couldn&amp;rsquo;t afford to study, buy computers, or have access to technology in general.&lt;/p&gt;
&lt;p&gt;My first job was painting bicycle handlebars, and I had no prospects. Later, I got a job managing the inventory of a candy store. With that, I made an agreement with my family that the little money I earned would go towards paying for college, and we all agreed!&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>How Am I Learning Golang</title>
      <link>//localhost:1313/posts/how-am-i-learning-golang/</link>
      <pubDate>Mon, 23 Sep 2024 17:34:27 -0300</pubDate>
      
      <guid>//localhost:1313/posts/how-am-i-learning-golang/</guid>
      
        <description>&lt;p&gt;In my work, I’ve started using Golang. I’m aware of AI tools like ChatGPT, which can help me complete tasks more efficiently.
However, I really enjoy learning new technologies and am always open to new challenges.&lt;/p&gt;
&lt;p&gt;In the past, I learned &lt;a href=&#34;https://www.scala-lang.org/&#34;&gt;Scala&lt;/a&gt;, &lt;a href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt;, and &lt;a href=&#34;https://www.java.com/&#34;&gt;Java&lt;/a&gt; by reading books and practicing them daily.
This time, I’m learning Golang using different approaches. I use Exercism to practice Golang, and now I’ll show you how to use it.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Senior Software Engineer</title>
      <link>//localhost:1313/posts/senior-software-engineer/</link>
      <pubDate>Tue, 17 Sep 2024 16:37:38 -0300</pubDate>
      
      <guid>//localhost:1313/posts/senior-software-engineer/</guid>
      
        <description>&lt;h2 id=&#34;senior-software-engineers-impacting-business-growth-and-inspiring-teams&#34;&gt;Senior Software Engineers: Impacting Business Growth and Inspiring Teams&lt;/h2&gt;
&lt;p&gt;When I started as a Software Engineer, I skipped the internal steps because my initial experience in tech was with infrastructure, not programming. I transitioned into software engineering four years later, and when I finally worked as a Software Engineer, I was very fortunate. My coworkers were exceptional professionals who supported me at the beginning of my journey.&lt;/p&gt;
&lt;p&gt;As a Senior Software Engineer now, I strive every day to be like those mentors and positively impact the people I work with. Knowing the business you work in better than anyone else enables you to help those around you and be an outstanding professional wherever you go.
A phrase that I always remember to impact the people around me is, always be the senior you wish you had met when you were a junior. This phrase has helped me to be a better professional and to help others in their journey.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>First Clojure Project</title>
      <link>//localhost:1313/posts/first-clojure-project/</link>
      <pubDate>Mon, 16 Sep 2024 18:04:37 -0300</pubDate>
      
      <guid>//localhost:1313/posts/first-clojure-project/</guid>
      
        <description>&lt;h1 id=&#34;creating-our-first-clojure-project&#34;&gt;Creating Our First Clojure Project&lt;/h1&gt;
&lt;p&gt;Let&amp;rsquo;s continue with our tutorial. Today, I will explain how we can create a Clojure project. I decided to split this article into two parts: we will explain how to create a regular project and a web project, where we will create an API for some service.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s start by creating a regular project. It won&amp;rsquo;t be an API, a library, or anything like that. I just want to demonstrate how to create a project, explain its structure, and everything else.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>About Me</title>
      <link>//localhost:1313/about/</link>
      <pubDate>Mon, 16 Sep 2024 17:31:59 -0300</pubDate>
      
      <guid>//localhost:1313/about/</guid>
      
        <description>&lt;p&gt;My name is Gilmar and I am a software developer with over 7 years of experience, passionate about creating technological solutions that make a difference.&lt;/p&gt;
&lt;p&gt;I work with various languages and paradigms such as Python, Java, Scala, and SQL, and I have expertise in scalable system architectures. Currently,&lt;/p&gt;
&lt;p&gt;I am dedicated to developing high-performance solutions (Black Friday level) using the GCP and AWS platforms.&lt;/p&gt;
&lt;p&gt;My professional journey includes participating in projects that serve millions of users daily, especially in the e-commerce and public transportation sectors.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>